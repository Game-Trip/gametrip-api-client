/**
 * GameTrip.API
 * GameTrip API
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CustomAttributeData } from '../models/CustomAttributeData';
import { EventAttributes } from '../models/EventAttributes';
import { MemberTypes } from '../models/MemberTypes';
import { MethodInfo } from '../models/MethodInfo';
import { Module } from '../models/Module';
import { Type } from '../models/Type';
import { HttpFile } from '../http/http';

export class EventInfo {
    'name'?: string | null;
    'declaringType'?: Type;
    'reflectedType'?: Type;
    'module'?: Module;
    'customAttributes'?: Array<CustomAttributeData> | null;
    'isCollectible'?: boolean;
    'metadataToken'?: number;
    'memberType'?: MemberTypes;
    'attributes'?: EventAttributes;
    'isSpecialName'?: boolean;
    'addMethod'?: MethodInfo;
    'removeMethod'?: MethodInfo;
    'raiseMethod'?: MethodInfo;
    'isMulticast'?: boolean;
    'eventHandlerType'?: Type;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "declaringType",
            "baseName": "declaringType",
            "type": "Type",
            "format": ""
        },
        {
            "name": "reflectedType",
            "baseName": "reflectedType",
            "type": "Type",
            "format": ""
        },
        {
            "name": "module",
            "baseName": "module",
            "type": "Module",
            "format": ""
        },
        {
            "name": "customAttributes",
            "baseName": "customAttributes",
            "type": "Array<CustomAttributeData>",
            "format": ""
        },
        {
            "name": "isCollectible",
            "baseName": "isCollectible",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "metadataToken",
            "baseName": "metadataToken",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "memberType",
            "baseName": "memberType",
            "type": "MemberTypes",
            "format": ""
        },
        {
            "name": "attributes",
            "baseName": "attributes",
            "type": "EventAttributes",
            "format": ""
        },
        {
            "name": "isSpecialName",
            "baseName": "isSpecialName",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "addMethod",
            "baseName": "addMethod",
            "type": "MethodInfo",
            "format": ""
        },
        {
            "name": "removeMethod",
            "baseName": "removeMethod",
            "type": "MethodInfo",
            "format": ""
        },
        {
            "name": "raiseMethod",
            "baseName": "raiseMethod",
            "type": "MethodInfo",
            "format": ""
        },
        {
            "name": "isMulticast",
            "baseName": "isMulticast",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "eventHandlerType",
            "baseName": "eventHandlerType",
            "type": "Type",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return EventInfo.attributeTypeMap;
    }

    public constructor() {
    }
}



