/**
 * GameTrip.API
 * GameTrip API
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Comment } from '../models/Comment';
import { Game } from '../models/Game';
import { GameTripUser } from '../models/GameTripUser';
import { LikedLocation } from '../models/LikedLocation';
import { Picture } from '../models/Picture';
import { RequestLocationUpdate } from '../models/RequestLocationUpdate';
import { HttpFile } from '../http/http';

export class Location {
    'idLocation'?: string;
    'name'?: string | null;
    'description'?: string | null;
    'latitude'?: number;
    'longitude'?: number;
    'isValid'?: boolean;
    'authorId'?: string;
    'author'?: GameTripUser;
    'pictures'?: Array<Picture> | null;
    'games'?: Array<Game> | null;
    'comments'?: Array<Comment> | null;
    'likedLocations'?: Array<LikedLocation> | null;
    'requestLocationUpdates'?: Array<RequestLocationUpdate> | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "idLocation",
            "baseName": "idLocation",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "latitude",
            "baseName": "latitude",
            "type": "number",
            "format": "double"
        },
        {
            "name": "longitude",
            "baseName": "longitude",
            "type": "number",
            "format": "double"
        },
        {
            "name": "isValid",
            "baseName": "isValid",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "authorId",
            "baseName": "authorId",
            "type": "string",
            "format": "uuid"
        },
        {
            "name": "author",
            "baseName": "author",
            "type": "GameTripUser",
            "format": ""
        },
        {
            "name": "pictures",
            "baseName": "pictures",
            "type": "Array<Picture>",
            "format": ""
        },
        {
            "name": "games",
            "baseName": "games",
            "type": "Array<Game>",
            "format": ""
        },
        {
            "name": "comments",
            "baseName": "comments",
            "type": "Array<Comment>",
            "format": ""
        },
        {
            "name": "likedLocations",
            "baseName": "likedLocations",
            "type": "Array<LikedLocation>",
            "format": ""
        },
        {
            "name": "requestLocationUpdates",
            "baseName": "requestLocationUpdates",
            "type": "Array<RequestLocationUpdate>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Location.attributeTypeMap;
    }

    public constructor() {
    }
}

