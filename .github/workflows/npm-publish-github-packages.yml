name: Node.js Package

permissions:
  packages: write

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Install Node LTS
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          
      - run: |
          mv .npmrc .yarnrc.yaml
          echo "npmScopes:" > .yarnrc.yaml
          echo "  game-trip:" >> .yarnrc.yaml
          echo "    npmPublishRegistry: 'https://npm.pkg.github.com/'" >> .yarnrc.yaml
          echo "    npmAlwaysAuth: true" >> .yarnrc.yaml
          echo "    npmAuthToken: '${{secrets.DERCRAKER_TOKEN_FINEGRINED }}'" >> .yarnrc.yaml
          
      - run: |
          npm config set @game-trip:registry https://npm.pkg.github.com/
          npm config set //npm.pkg.github.com/:_authToken ${{secrets.DERCRAKER_TOKEN }}

      - name: Install yarn package
        run: yarn

      - name: Build client API
        run: yarn build

      - name: Get Variable value
        run: |
          echo "NPM_PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV
          echo "NPM_PACKAGE_NAME=$(node -p "require('./package.json').name")" >> $GITHUB_ENV

      - name: Create NPM publish
        run: |
          if [[ $(npm view "${{env.NPM_PACKAGE_NAME}}" versions) != ${{env.NPM_PACKAGE_VERSION}} ]]; then
            yarn publish
            echo "Successfully published version ${{env.NPM_PACKAGE_VERSION}} of ${{env.NPM_PACKAGE_NAME}} to Github's NPM registry"
          else
            echo "Version ${{env.NPM_PACKAGE_VERSION}} of ${{env.NPM_PACKAGE_NAME}} has already been published, so no new version will be published."
          fi
